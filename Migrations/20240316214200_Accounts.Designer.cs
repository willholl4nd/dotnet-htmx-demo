// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_html_sortable_table.Data;

#nullable disable

namespace dotnet_html_sortable_table.Migrations
{
    [DbContext(typeof(SqliteContext))]
    [Migration("20240316214200_Accounts")]
    partial class Accounts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("dotnet_html_sortable_table.Models.Accounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AgeInCompanyYears")
                        .HasColumnType("REAL");

                    b.Property<double>("AgeInYears")
                        .HasColumnType("REAL");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DOWOfJoining")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateOfJoining")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DayOfJoining")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmpId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FathersName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HalfOfJoining")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastPercentHike")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleInitial")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MonthNameOfJoining")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MonthOfJoining")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MothersMaidenName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MothersName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NamePrefix")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("QuarterOfJoining")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Region")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SSN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Salary")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShortDOW")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortMonth")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeOfBirth")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WeightInKgs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YearOfJoining")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("dotnet_html_sortable_table.Models.DemoObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IdSort")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NameSort")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RandIntSort")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TableContainer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdSort = false,
                            NameSort = false,
                            RandIntSort = false
                        });
                });

            modelBuilder.Entity("dotnet_html_sortable_table.Models.DemoTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DemoObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RandInt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DemoObjectId");

                    b.ToTable("Entries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DemoObjectId = 1,
                            Name = "Bill",
                            RandInt = 3
                        },
                        new
                        {
                            Id = 2,
                            DemoObjectId = 1,
                            Name = "Bob",
                            RandInt = 9
                        },
                        new
                        {
                            Id = 3,
                            DemoObjectId = 1,
                            Name = "Jim",
                            RandInt = 0
                        });
                });

            modelBuilder.Entity("dotnet_html_sortable_table.Models.DemoTable", b =>
                {
                    b.HasOne("dotnet_html_sortable_table.Models.DemoObject", "DemoObject")
                        .WithMany("Table")
                        .HasForeignKey("DemoObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DemoObject");
                });

            modelBuilder.Entity("dotnet_html_sortable_table.Models.DemoObject", b =>
                {
                    b.Navigation("Table");
                });
#pragma warning restore 612, 618
        }
    }
}
